-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    user_id bigserial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password_hash character varying(200) COLLATE pg_catalog."default" NOT NULL,
    role character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    review_id bigserial NOT NULL,
    recipe_id bigint NOT NULL,
    user_id bigint NOT NULL,
    review_text text NOT NULL,
    review_date date NOT NULL,
    score integer NOT NULL,
    alteration_level alteration_level NOT NULL,
    PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.recipes
(
    recipe_id bigserial NOT NULL,
    creator_id bigint NOT NULL,
    title text NOT NULL,
    date_added date NOT NULL,
    cooking_time integer NOT NULL,
    private boolean NOT NULL DEFAULT false,
    instructions text NOT NULL,
    picture_links text[],
    video_link text,
    reference text,
    PRIMARY KEY (recipe_id)
);

CREATE TABLE IF NOT EXISTS public.ingredients
(
    ingredient_id bigserial NOT NULL,
    ingredient_name text NOT NULL,
    "PLACEHOLDER_INGREDIENT_TYPE" "char",
    PRIMARY KEY (ingredient_id)
);

CREATE TABLE IF NOT EXISTS public.ingredient_subtypes
(
    ingredient bigint NOT NULL,
    subtype_of bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.recipe_ingredient
(
    recipe_id bigint NOT NULL,
    ingredient_id bigint NOT NULL,
    amount real NOT NULL,
    "PLACE_HOLD_AMOUNT_TYPE" text NOT NULL,
    note text
);

CREATE TABLE IF NOT EXISTS public.recipe_variations
(
    recipe bigint NOT NULL,
    variation_of bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.tags
(
    tag_id bigserial NOT NULL,
    tag_text text NOT NULL,
    PRIMARY KEY (tag_id)
);

CREATE TABLE IF NOT EXISTS public.tags_recipes
(
    tags_tag_id bigserial NOT NULL,
    recipes_recipe_id bigserial NOT NULL
);

CREATE TABLE IF NOT EXISTS public.user_favorite_recipes
(
    users_user_id bigserial NOT NULL,
    recipes_recipe_id bigserial NOT NULL
);

CREATE TABLE IF NOT EXISTS public.grocery_list
(
    list_id bigserial NOT NULL,
    user_id bigint NOT NULL,
    list_name text NOT NULL,
    PRIMARY KEY (list_id)
);

CREATE TABLE IF NOT EXISTS public.grocery_sublist
(
    sublist_id bigserial NOT NULL,
    list_id bigint NOT NULL,
    title text NOT NULL DEFAULT Category,
    PRIMARY KEY (sublist_id)
);

CREATE TABLE IF NOT EXISTS public.ingredient_list
(
    list_id bigint,
    ingredient_id bigint NOT NULL,
    sublist_id bigint,
    amount real,
    "PLACEHOLDER_AMOUNT_TYPE" text,
    note text,
    checked_off boolean NOT NULL DEFAULT false,
    favorited boolean NOT NULL DEFAULT false,
    user_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.ingredient_restrictions
(
    ingredient_id bigint NOT NULL,
    dairy boolean NOT NULL DEFAULT false,
    egg boolean NOT NULL DEFAULT false,
    tree_nut boolean NOT NULL DEFAULT false,
    peanut boolean NOT NULL DEFAULT false,
    fish boolean NOT NULL DEFAULT false,
    shellfish boolean NOT NULL DEFAULT false,
    wheat boolean NOT NULL DEFAULT false,
    soy boolean NOT NULL DEFAULT false,
    vegan boolean NOT NULL DEFAULT false,
    kosher boolean NOT NULL DEFAULT false,
    vegetarian boolean NOT NULL DEFAULT false,
    PRIMARY KEY (ingredient_id)
);

CREATE TABLE IF NOT EXISTS public.user_pantry
(
    user_id bigint NOT NULL,
    ingredient_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.meal_plan
(
    plan_id bigserial NOT NULL,
    user_id bigint NOT NULL,
    plan_name text NOT NULL,
    plan_length integer NOT NULL DEFAULT 7,
    PRIMARY KEY (plan_id)
);

CREATE TABLE IF NOT EXISTS public.meal_plan_day
(
    plan_id bigint NOT NULL,
    day_id bigserial NOT NULL,
    PRIMARY KEY (day_id)
);

CREATE TABLE IF NOT EXISTS public.plan_day_recipes
(
    plan_day_id bigint NOT NULL,
    plan_text text NOT NULL DEFAULT 0,
    plan_recipe_id bigint NOT NULL
);

ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.recipes
    ADD CONSTRAINT creator_id FOREIGN KEY (creator_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_subtypes
    ADD FOREIGN KEY (ingredient)
    REFERENCES public.ingredients (ingredient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_subtypes
    ADD FOREIGN KEY (ingredient)
    REFERENCES public.ingredients (ingredient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.recipe_ingredient
    ADD CONSTRAINT recipe FOREIGN KEY (recipe_id)
    REFERENCES public.recipes (recipe_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.recipe_ingredient
    ADD CONSTRAINT ingredient FOREIGN KEY (ingredient_id)
    REFERENCES public.ingredients (ingredient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.recipe_variations
    ADD CONSTRAINT recipe FOREIGN KEY (recipe, variation_of)
    REFERENCES public.recipes (recipe_id, recipe_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tags_recipes
    ADD FOREIGN KEY (tags_tag_id)
    REFERENCES public.tags (tag_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tags_recipes
    ADD FOREIGN KEY (recipes_recipe_id)
    REFERENCES public.recipes (recipe_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_favorite_recipes
    ADD FOREIGN KEY (users_user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_favorite_recipes
    ADD FOREIGN KEY (recipes_recipe_id)
    REFERENCES public.recipes (recipe_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.grocery_list
    ADD CONSTRAINT "user" FOREIGN KEY (list_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.grocery_sublist
    ADD CONSTRAINT "List" FOREIGN KEY (list_id)
    REFERENCES public.grocery_list (list_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_list
    ADD CONSTRAINT list FOREIGN KEY (list_id)
    REFERENCES public.grocery_list (list_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_list
    ADD CONSTRAINT sublist FOREIGN KEY (sublist_id)
    REFERENCES public.grocery_sublist (sublist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_list
    ADD CONSTRAINT "user" FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_list
    ADD CONSTRAINT ingredient FOREIGN KEY (ingredient_id)
    REFERENCES public.ingredients (ingredient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ingredient_restrictions
    ADD CONSTRAINT ingredient FOREIGN KEY (ingredient_id)
    REFERENCES public.ingredients (ingredient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_pantry
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_pantry
    ADD FOREIGN KEY (ingredient_id)
    REFERENCES public.ingredients (ingredient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.meal_plan
    ADD CONSTRAINT owner FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.meal_plan_day
    ADD FOREIGN KEY (plan_id)
    REFERENCES public.meal_plan (plan_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.plan_day_recipes
    ADD CONSTRAINT "plan Id" FOREIGN KEY (plan_day_id)
    REFERENCES public.meal_plan_day (day_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.plan_day_recipes
    ADD CONSTRAINT "recipe id" FOREIGN KEY (plan_recipe_id)
    REFERENCES public.recipes (recipe_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

END;